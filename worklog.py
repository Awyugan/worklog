import tkinter as tkimport datetimeimport loggingimport osimport jsonfrom tkinter import filedialoglogging.basicConfig(filename='worklog.log', level=logging.INFO,                    format='%(asctime)s %(levelname)s %(message)s')def save_log():    try:        content = entry.get()        now = datetime.datetime.now()        date = now.strftime("%Y_%m%d")        time = now.strftime("%H:%M")        save_dir = entry_dir.get()        if not save_dir:            save_dir = default_dir        if not os.path.exists(save_dir):            os.makedirs(save_dir)        filename = os.path.join(save_dir, "{}.md".format(date))        with open(filename, "a") as f:            log = f"{time} {content}\n"            f.write(log)            result_label.config(text=f"日志保存成功：{log}")            logging.info(f"日志保存成功：{log}")    except Exception as e:        result_label.config(text="保存日志失败，请稍后重试！")        logging.exception("保存日志失败：{}".format(e))def choose_dir():    global default_dir    default_dir = entry_dir.get()    if not default_dir:        default_dir = get_default_dir()    dir_path = filedialog.askdirectory(initialdir=default_dir)    if dir_path:        entry_dir.delete(0, tk.END)        entry_dir.insert(0, dir_path)        set_default_dir(dir_path) # 将选择的目录设置为新的默认保存目录def get_default_dir():    config_file = "config.json"    if os.path.exists(config_file):        with open(config_file, "r") as f:            config = json.load(f)            return config.get("default_dir", "/Users/polan/logs")    else:        return "/Users/polan/logs"def set_default_dir(default_dir):    config_file = "config.json"    config = {"default_dir": default_dir}    with open(config_file, "w") as f:        json.dump(config, f)root = tk.Tk()root.title("工作日志")root.geometry("400x250")label = tk.Label(root, text="工作日志内容：")label.pack()entry = tk.Entry(root)entry.pack()label_dir = tk.Label(root, text="保存目录：")label_dir.pack()entry_dir = tk.Entry(root)entry_dir.pack()button_dir = tk.Button(root, text="选择目录", command=choose_dir)button_dir.pack()default_dir = get_default_dir() # 默认保存目录if os.path.exists(default_dir): # 如果默认保存目录存在，则使用它    entry_dir.insert(0, default_dir)button = tk.Button(root, text="保存日志", command=save_log)button.pack()result_label = tk.Label(root, text="")result_label.pack()# 让窗口居中显示root.eval('tk::PlaceWindow %s center' % root.winfo_pathname(root.winfo_id()))root.mainloop()